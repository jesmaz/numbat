typedef raw 8 @sint : int8
typedef raw 8 @uint : uint8
typedef raw 64 @uint : uint64

struct string {int8 [0] data}
struct cstring {ref int8 data}

extern def malloc @cstyle @malloc (uint64 size) {ref uint8}:
extern def free @cstyle @free (ref uint8 ptr) {}:


def string (ref int8 [0] data) {string}:
	string str
	#str.data = int8 [data.length + 1]
	#str.data [:] = data [:]
	#str.data [str.data.length] = 0
	return str

def string (ref string rhs) {string}:
	string str
	str.data = rhs.data
	return str

def cstring (ref string rhs) {cstring}:
	cstring cs
	#cs.data => rhs.data [0]
	return cs