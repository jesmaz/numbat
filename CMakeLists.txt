cmake_minimum_required(VERSION 2.6)
project(numbat)


#option(debug "debug" ON)


execute_process(COMMAND llvm-config-3.5 --includedir OUTPUT_VARIABLE LLVM_INCLUDE_DIRS OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND llvm-config-3.5 --libdir OUTPUT_VARIABLE LLVM_LIBRARY_DIRS OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND llvm-config-3.5 --libs all-targets core jit native analysis ipo systemz OUTPUT_VARIABLE REQ_LLVM_LIBRARIES OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND llvm-config-3.5 --ldflags OUTPUT_VARIABLE LLVM_LINKER_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)

#We only care about preprocessor flags
execute_process(COMMAND llvm-config --cppflags OUTPUT_VARIABLE LLVM_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)

include_directories(${LLVM_INCLUDE_DIRS} "${CMAKE_SOURCE_DIR}/include")
link_directories(${LLVM_LIBRARY_DIRS})

set(CMAKE_CXX_FLAGS "-Wall -Wextra -Weffc++ -pedantic -DUSE_LLVM -std=c++14 -g -pthread -march=native ${LLVM_FLAGS}")

set(sources ${sources} "src/ast.cpp")
set(sources ${sources} "src/cast.cpp")
set(sources ${sources} "src/core.cpp")
set(sources ${sources} "src/file.cpp")
set(sources ${sources} "src/generator.cpp")
set(sources ${sources} "src/lexer.cpp")
set(sources ${sources} "src/module.cpp")
set(sources ${sources} "src/numbat.cpp")
set(sources ${sources} "src/parser.cpp")
set(sources ${sources} "src/position.cpp")
set(sources ${sources} "src/ast/astbase.cpp")
set(sources ${sources} "src/ast/astbody.cpp")
set(sources ${sources} "src/ast/astcall.cpp")
set(sources ${sources} "src/ast/astnumbatinstr.cpp")
set(sources ${sources} "src/ast/asttuple.cpp")
set(sources ${sources} "src/ast/asttuplecall.cpp")
set(sources ${sources} "src/ast/functiondecleration.cpp")
set(sources ${sources} "src/ast/numbatpointertype.cpp")
set(sources ${sources} "src/ast/numbatrawtype.cpp")
set(sources ${sources} "src/ast/numbatscope.cpp")
set(sources ${sources} "src/ast/numbattype.cpp")
set(sources ${sources} "src/ast/operatordecleration.cpp")
set(sources ${sources} "src/codegen/interpreter.cpp")
set(sources ${sources} "src/codegen/target.cpp")
set(sources ${sources} "src/nir/function.cpp")
set(sources ${sources} "src/nir/inst/add.cpp")
set(sources ${sources} "src/nir/inst/div.cpp")
set(sources ${sources} "src/nir/inst/mul.cpp")
set(sources ${sources} "src/nir/inst/sub.cpp")
set(sources ${sources} "src/nir/instruction.cpp")
set(sources ${sources} "src/nir/module.cpp")
set(sources ${sources} "src/nir/scope.cpp")
set(sources ${sources} "src/nir/type.cpp")
set(sources ${sources} "src/nir/type/functionType.cpp")
set(sources ${sources} "src/nir/type/pointer.cpp")
set(sources ${sources} "src/nir/type/struct.cpp")
set(sources ${sources} "src/parse/handparser.cpp")
set(sources ${sources} "src/parse/parser.cpp")
set(sources ${sources} "src/parse/stack.cpp")
set(sources ${sources} "src/parse/tree.cpp")
set(sources ${sources} "src/parse/tree/base.cpp")
set(sources ${sources} "src/parse/tree/call.cpp")
set(sources ${sources} "src/parse/tree/error.cpp")
set(sources ${sources} "src/parse/tree/function.cpp")
set(sources ${sources} "src/parse/tree/ifelse.cpp")
set(sources ${sources} "src/parse/tree/identifier.cpp")
set(sources ${sources} "src/parse/tree/import.cpp")
set(sources ${sources} "src/parse/tree/index.cpp")
set(sources ${sources} "src/parse/tree/keyword.cpp")
set(sources ${sources} "src/parse/tree/list.cpp")
set(sources ${sources} "src/parse/tree/literal.cpp")
set(sources ${sources} "src/parse/tree/operator.cpp")
set(sources ${sources} "src/parse/tree/slice.cpp")
set(sources ${sources} "src/parse/tree/struct.cpp")
set(sources ${sources} "src/parse/tree/symbol.cpp")
set(sources ${sources} "src/parse/tree/variable.cpp")
set(sources ${sources} "src/utility/alphanumeric.cpp")
add_library(numbat-static STATIC ${sources})

set(libs ${libs} ${REQ_LLVM_LIBRARIES} ${LLVM_LINKER_FLAGS} numbat-static dl z tinfo)

add_executable(console ${sources} src/console.cpp)
add_executable(interpreter ${sources} src/console.cpp)
add_executable(numbat ${sources} src/main.cpp)
add_executable(parsertest ${sources} test/parser.cpp)
add_executable(parsertest-dbg ${sources} test/parser.cpp)

target_link_libraries(console ${libs})
target_link_libraries(interpreter ${libs})
target_link_libraries(numbat ${libs})
target_link_libraries(parsertest ${libs})
target_link_libraries(parsertest-dbg ${libs})

set_target_properties(parsertest-dbg PROPERTIES COMPILE_FLAGS "-DDEBUG")
set_target_properties(interpreter PROPERTIES COMPILE_FLAGS "-DN_PROMPT")

install(FILES numbat.xml DESTINATION /usr/share/katepart5/syntax/)
install(DIRECTORY "libnbt/" DESTINATION /usr/include/numbat)
install(TARGETS numbat numbat-static numbat-static RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib/static)